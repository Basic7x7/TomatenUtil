##
include <src/txs/include.txs>
import std

const src = "src/de/tomatengames/util";
const txs = "src/txs";

const MAX_FUNCTION_N = 9;
##
config :inline "%"

run-inplace -io "@src;/ArrayUtil.java"
run-inplace -io "@src;/NumberUtil.java"

##
for (type in types) {
	for (type2 in types) {
		##
		run -i "@txs;/XToXFunction.txs" -o "@src;/function/@type;To@type2;Function.java"
			-v inpName=@tson(type); outName=@tson(type2);
		##
	}
	
	for (i := 0; i <= MAX_FUNCTION_N; i++) {
		##
		run -i "@txs;/RefNToXFunction.txs" -o "@src;/function/Ref@i;To@type;Function.java"
			-v n=@i; outName=@tson(type);
		##
	}
	
	##
	run -i "@txs;/ConsumerWithThrows.txs" -o "@src;/function/@type;ConsumerWithThrows.java"
		-v inpName=@tson(type);
	##
	
	if (type != "Void") {
		string name = type != "Ref" && type;
		##
		run -i "@txs;/Linked.txs" -o "@src;/linked/Linked@name;.java"
			-v typeName=@tson(type);
		##
	}
}

for (mapType in maps) {
	final map = mapData[mapType];
	##
	run -i "@txs;/Entry.txs" -o "@src;/map/@map.namePrefix;Entry.java" -v mapName=@tson(mapType);
	run -i "@txs;/HashMap.txs" -o "@src;/map/@map.namePrefix;HashMap.java" -v mapName=@tson(mapType);
	##
}
##
